version: "3.8"

networks:
  mynetwork:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

x-minio-common: &minio-common
  image: quay.io/minio/minio:latest
  command: server --console-address ":9090" mnt/data
  ports:
    - "9000:9000"
    - "9090:9090"
  env_file: ./minio/.env
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9090/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3
  networks:
    - mynetwork

x-airflow-common: &airflow-common
  image: kiriharacken/custom-airflow:latest
  # image: apache/airflow:2.6.0
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./my_data:/opt/airflow/my_data
    - ./my_lib:/opt/airflow/my_lib
    - ./spark/app:/usr/local/spark/app # Spark scripts folder (Must be the same path in airflow and Spark Cluster)
    - ./spark/resources:/usr/local/spark/resources #Resources folder (Must be the same path in airflow and Spark Cluster)
    # - /var/run/docker.sock:/var/run/docker.sock
    # - ./my_config:/opt/airflow/my_config
  networks:
    - mynetwork

x-depends-on: &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  postgres:
    image: postgres:13
    container_name: postgres
    networks:
      mynetwork:
        ipv4_address: 172.28.0.6
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  scheduler:
    <<: [*airflow-common, *depends-on]
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: [*airflow-common, *depends-on]
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"

    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version

  chrome-selenium:
    image: selenium/standalone-chrome:latest
    hostname: chrome-selenium
    shm_size: 1g
    ports:
      - "5900:5900"
      - "4444:4444"
    networks:
      - mynetwork

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - type: bind
        source: ./minio_storage
        target: /mnt/data

  spark:
    image: bitnami/spark:3.3
    user: root # Run container as root container: https://docs.bitnami.com/tutorials/work-with-non-root-containers/
    hostname: spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./spark/app:/usr/local/spark/app # Spark scripts folder (Must be the same path in airflow and Spark Cluster)
      - ./spark/resources:/usr/local/spark/resources #Resources folder (Must be the same path in airflow and Spark Cluster)
    ports:
      - "8181:8080"
      - "7077:7077"
    networks:
      - mynetwork

  metabase:
    image: metabase/metabase
    ports:
      - 3000:3000
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=postgres
      - MB_DB_PORT=5432
      - MB_DB_USER=airflow
      - MB_DB_PASS=airflow
      - MB_DB_HOST=172.28.0.6
    networks:
      - mynetwork
    depends_on:
      - postgres

volumes:
  postgres_data:
